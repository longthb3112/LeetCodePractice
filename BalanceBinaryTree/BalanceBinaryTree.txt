//C# language 
//recursive
public class Solution {
    public bool violate = false;
     public  bool IsBalanced(TreeNode root)
        {
            if (root == null) return true;
            var left = MaxDepth(root.left);
            var right = MaxDepth(root.right);
            if (violate == true) return false;
            return Math.Abs(left - right) <= 1;
        }
    public int MaxDepth(TreeNode root)
    {
        if(violate == true) return 0;
        if(root == null) return 0;
        if(root.left == null && root.right == null) return 1;
        int leftDepth = 0;
        int rightDepth = 0;
        if(root.left != null)
        {
           leftDepth  = Math.Max(MaxDepth(root.left),leftDepth);
        }
        if(root.right != null)
        {
            rightDepth = Math.Max(MaxDepth(root.right),rightDepth);
        }
        if(Math.Abs(leftDepth - rightDepth) > 1)
        {
            violate = true;
            return int.MaxValue;
        }
        return Math.Max(leftDepth,rightDepth) + 1;
    }
}