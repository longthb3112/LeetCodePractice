//C# language 
//recursive
int max = 0;
public int MaxDepth(Node root) {
	if(root == null) return 0;
	if(root.children == null || root.children.Count == 0) return 1;
	MaxDepth(root,1);
	return max;
   
}
public void MaxDepth(Node root, int depth)
{
	max = Math.Max(max,depth);
	if(root == null) return;
	if(root.children != null && root.children.Count > 0)
	{
		foreach(var child in root.children)
		{
			MaxDepth(child, depth +1);
		}
	}
}
//recursive with one method
 public int MaxDepth(Node root) {
        if(root == null) return 0;
        if(root.children == null || root.children.Count == 0) return 1;
        int depth = 0;
        foreach(var child in root.children)
            {
                depth = Math.Max(MaxDepth(child),depth);
            }
       
       return depth + 1;
    }